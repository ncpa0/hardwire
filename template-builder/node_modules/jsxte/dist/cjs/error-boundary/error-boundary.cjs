"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/error-boundary/error-boundary.ts
var error_boundary_exports = {};
__export(error_boundary_exports, {
  ErrorBoundary: () => ErrorBoundary
});
module.exports = __toCommonJS(error_boundary_exports);
var ErrorBoundary = class {
  /**
   * @internal
   */
  static _isErrorBoundary(o) {
    const canBeClass = typeof o === "function";
    const isNotNull = o !== null;
    if (!canBeClass || !isNotNull)
      return false;
    const baseName = o._baseName;
    return baseName === this._baseName;
  }
  constructor(_) {
  }
};
ErrorBoundary._baseName = "ErrorBoundary";
