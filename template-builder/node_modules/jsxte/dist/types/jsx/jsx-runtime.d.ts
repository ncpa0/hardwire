import type { ComponentApi } from "jsxte/dist/types/component-api/component-api";
type CreateElementProps = {
    [k: string]: any;
    children?: JSXTE.ElementChildren;
};
export declare const createElement: (tag: string | ((props: any, contextMap: ComponentApi) => JSX.Element) | ((props: any, contextMap: ComponentApi) => Promise<JSX.Element>), props?: CreateElementProps, ...children: Array<JSX.Element | string | number | Array<JSX.Element | string | number>>) => JSX.Element;
export declare const jsx: (tag: string | ((props: any, contextMap: ComponentApi) => JSX.Element) | ((props: any, contextMap: ComponentApi) => Promise<JSX.Element>), props?: CreateElementProps, ...children: Array<JSX.Element | string | number | Array<JSX.Element | string | number>>) => JSX.Element;
export declare const jsxs: (tag: string | ((props: any, contextMap: ComponentApi) => JSX.Element) | ((props: any, contextMap: ComponentApi) => Promise<JSX.Element>), props?: CreateElementProps, ...children: Array<JSX.Element | string | number | Array<JSX.Element | string | number>>) => JSX.Element;
export declare const _jsx: (tag: string | ((props: any, contextMap: ComponentApi) => JSX.Element) | ((props: any, contextMap: ComponentApi) => Promise<JSX.Element>), props?: CreateElementProps, ...children: Array<JSX.Element | string | number | Array<JSX.Element | string | number>>) => JSX.Element;
export declare const _jsxs: (tag: string | ((props: any, contextMap: ComponentApi) => JSX.Element) | ((props: any, contextMap: ComponentApi) => Promise<JSX.Element>), props?: CreateElementProps, ...children: Array<JSX.Element | string | number | Array<JSX.Element | string | number>>) => JSX.Element;
export declare const Fragment = "";
export declare const _Fragment = "";
export { };

