var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});

// src/express/index.ts
import { renderToHtmlAsync } from "../html-renderer/render-to-html.mjs";
import { createElement } from "../jsx/jsx-runtime.mjs";
var __express = async (filePath, options, callback) => {
  options ?? (options = {});
  try {
    const Component = __require(filePath).default;
    const html = await renderToHtmlAsync(createElement(Component, options));
    return callback(null, html);
  } catch (e) {
    callback(e);
  }
};
var expressExtend = (app) => {
  app.engine("js", __express);
  app.set("view engine", "js");
};
export {
  expressExtend
};
