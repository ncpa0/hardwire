import { AttributeBool } from "jsxte";
import { WcSlot } from "jsxte-wc";
import { BaseElement } from "../../base-elements";
import "../../index.css";
import { CustomMouseEvent } from "../../utils/events";
import "./selector.css";
declare global {
    namespace JSXTE {
        interface DialogTagProps {
            oncancel?: (e: Event) => void;
        }
    }
    namespace JSX {
        interface AdwSelectorProps {
            class?: string;
            id?: string;
            slot?: string;
            style?: string;
            placeholder?: string;
            disabled?: AttributeBool;
            name?: string;
            form?: string;
            orientation?: "up" | "down";
            children?: any;
            onChange?: (e: CustomEvent<{
                value?: string;
            }>) => void;
            onchange?: string;
            onClick?: (e: CustomMouseEvent<{}>) => void;
            onclick?: string;
        }
        interface AdwOptionProps {
            value: string;
            selected?: AttributeBool;
        }
        interface IntrinsicElements {
            "adw-selector": AdwSelectorProps;
            "adw-option": AdwOptionProps;
        }
    }
}
export declare class ADWaveSelector extends BaseElement {
    accessor placeholder: string | null;
    accessor disabled: boolean;
    accessor name: string | null;
    accessor form: string | null;
    accessor orientation: "up" | "down";
    accessor isOpen: boolean;
    accessor currentOption: string | undefined;
    accessor options: ADWaveSelectorOption[];
    private uid;
    private dialogElem;
    private optionsListElem;
    constructor();
    private focusSelf;
    /**
     * Selects the option that is offset from the currently focused
     * option. (e.g. focusOption(1) should select the option following
     * the currently focused one whereas focusOption(-2) should select
     * the second option that's behind the focused option)
     */
    private focusOption;
    private select;
    private handleClick;
    private handleDialogClick;
    private handleOptionClick;
    private handleModalCancel;
    private withCustomKeyEvent;
    private handleKeyDown;
    private getSelectedOption;
    private Option;
    private OptionsListMobile;
    private OptionsListDesktop;
    private HiddenSelect;
    render(): JSX.Element;
}
export declare class ADWaveSelectorOption extends WcSlot {
    get selected(): boolean;
    set selected(selected: boolean);
    constructor();
    isEqualTo(value?: string): boolean;
    hasValue(): boolean;
    getValue(): string;
    getLabel(): string;
    setSelected(selected: boolean): void;
    isSelected(): boolean;
    protected shouldEmitAttributeChangeEvent(mutations: MutationRecord[]): boolean;
}
