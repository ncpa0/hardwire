import { AttributeBool } from "jsxte";
import { BaseElement } from "../../base-elements";
import "../../index.css";
import { CustomPointerEvent } from "../../utils/events";
import "./slider.css";
declare global {
    namespace JSX {
        interface AdwSliderProps {
            class?: string;
            id?: string;
            slot?: string;
            style?: string;
            value?: number;
            min?: number;
            max?: number;
            step?: number;
            precision?: number;
            disabled?: AttributeBool;
            name?: string;
            form?: string;
            onChange?: (e: SliderChangeEvent) => void;
            onchange?: string;
            onPointerDown?: (e: CustomPointerEvent<{}>) => void;
            onpointerdown?: string;
        }
        interface IntrinsicElements {
            "adw-slider": AdwSliderProps;
        }
    }
}
declare class SliderChangeEvent extends CustomEvent<{
    value: number;
}> {
    constructor(value: number);
}
export declare class ADWaveSliderElement extends BaseElement {
    accessor value: number;
    accessor min: number;
    accessor max: number;
    accessor step: number;
    accessor precision: number;
    accessor disabled: boolean;
    accessor name: string | null;
    accessor form: string | null;
    private progress;
    private thumb;
    protected isPressed: boolean;
    constructor();
    private setValue;
    private moveThumb;
    private handlePointerDown;
    private handlePointerEventUp;
    private handlePointerEventMove;
    handleKeyDown: (e: KeyboardEvent) => void;
    render(): JSX.Element;
}
export {};
